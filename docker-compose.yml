services:
  metadata-ai:
    build: .
    container_name: metadata-ai-app
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BROKER_URL=kafka:9092
      - KAFKA_TOPIC=user_interactions
      - MONGO_USER=root
      - MONGO_PASSWORD=example
      - MONGO_COLLECTION=assets
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - METADATA_ENDPOINT=http://openmetadata-server:8585/api
      - METADATA_JWT_TOKEN=${METADATA_JWT_TOKEN}
    depends_on:
      - kafka
      - zookeeper
      - mongo
      - openmetadata-server

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  mongo:
    image: mongo:6.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"

  openmetadata-server:
    image: openmetadata/server:1.3.1
    environment:
      SERVER_HOST_API_URL: http://openmetadata-server:8585/api
      ELASTICSEARCH_HOST: http://elasticsearch:9200
      DB_HOST: postgres
      DB_PORT: 5433
      DB_USER: openmetadata_user
      DB_PASSWORD: openmetadata_password
      DB_DATABASE: openmetadata_db
      AUTHENTICATION_PROVIDER: "no-auth"
    ports:
      - "8585:8585"
    depends_on:
      - elasticsearch
      - postgres

  elasticsearch:
    image: elasticsearch:7.17.10
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: openmetadata_user
      POSTGRES_PASSWORD: openmetadata_password
      POSTGRES_DB: openmetadata_db
    ports:
      - "5433:5433"

